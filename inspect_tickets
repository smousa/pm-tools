#!/usr/bin/env python

import yaml
import optparse
import subprocess
import re
from clint.textui import puts, indent
from clint.textui.colored import red, green, yellow, white
from jira.client import JIRA


def run(cmd):
    try:
        output = subprocess.check_output(cmd.split(' '), stderr=subprocess.STDOUT)
    except Exception:
        with indent(4):
            puts(red("Error running command: ") + cmd)
        raise
    return output


def find_jira(config_file):
    jira_config = {}
    with open(config_file) as jira_conf:
        jira_config = yaml.load(jira_conf)
    options = {
        'server': jira_config['jira_server'],
        'rest_api_version': jira_config['jira_api_version']
    }
    basic_auth = (jira_config['jira_user'], jira_config['jira_password'])
    jira = JIRA(options, basic_auth)
    return jira


def main(jira, tickets):
    import time
    for issue in tickets:
        jissue = jira.issue(issue)
        fixVersions = [x.name for x in jissue.fields.fixVersions.value]
        versions = []
        for f in fixVersions:
            if 'rps' in f.lower():
                versions.append(str(green(f)))
            else:
                versions.append(str(red(f)))
        issue_type = jissue.fields.issuetype.value._session['name']
        if issue_type == 'Patch':
            issue_type = green('Patch')
        else:
            issue_type = red(issue_type)
        puts(white(issue) + ' -> ' + issue_type + ' => ' + ', '.join(versions))
        time.sleep(1)


if __name__ == '__main__':
    parser = optparse.OptionParser()
    (options, args) = parser.parse_args()
    working_dir = args[0]
    jira_config = args[1]

    jira = find_jira(jira_config)

    git_cmd = "git --git-dir=%s/.git log --pretty=oneline" % working_dir
    git_log = run(git_cmd)
    tickets = []
    git_log = git_log.split("\n")
    for l in git_log:
        issue_try = re.search('.*(?P<issue>ZEN-[0-9]*).*', l)
        try:
            issue = issue_try.group('issue')
            tickets.append(issue)
        except:
            puts("Could not find jira issue: %s" % l)
    tickets.sort()
    print tickets
    main(jira, tickets)
